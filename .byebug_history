continue
only_image
continue
only_image
continue
only_image
continue
post_love
post
continue
object
img
continue
object
img
continue
 returned_span.empty?
 returned_span.nil?
 returned_span
continue
content
continue
img.to_html
img
img.add_child(returned_span)
img
img.text?
object.text?
object.nodes
img
img.parent
object.remove_attribute(img)
object
img.node_name
object
continue
object.to_html
object
x
x.remove_attribute('span')
x.remove_attribute(object.css('span').first)
x.children.delete
x,children.delete
x
object.methods
object
x.children
x
x.to_html
x
x = img
img.to_html
img
img << returned_span
img
continue
returned_span
continue
returned_span
continue
returned_span
continue
spans
returned_span
continue
returned_span
img
continue
returned_text
continue
spans.to_html
spans.text
span
spans.text
span
spans.count
spans.cpunt
spans
object
continue
span
continue
img
span.text.length
span.text
span
continue
object.text << "..."
object.text
object,text
object
object.text << "...."
str
p
continue
object
continue
object
object.text
object.span
object.count
object
img
p
object
continue
object
continue
span.to_html
span.text
span
continue
span
continue
span
continue
object.css('span').count
continue
temp.last.text
x
x.length
x
x = temp.first.text
temp.first.text
temp.first
continue
strn
continue
temp
strn.to_html
strn
c
x
x = object.css('span')
continue
s
x
s = x.map { |c| s << c.text }
s = ""
c = x.map { |s| c << s.text }
x.last.text
x = object.css('span')
object.css('span').map { |n| p n.text }
object.css('span')
object
continue
img
object
continue
post_img
post
continue
para
continue
para
str
continue
para
continue
str
continue
str
continue
str
continue
img
continue
object
str
continue
a
a = "dsa"
a
a = nil
a
a << nil
a
a.empty?
a
a.nil?
a
a = ""
continue
img
pic
continue
img
object
img
continue
str
continue
str
continue
pic << par.last.text
pic
pic << "Marv"
pic
pic << par.first.text
pic << "dsada"
continue
pic
continue
img.css('img').count
continue
img.css('img').count
img
img.remove_attribute('span')
img
m
img.methods.remove_attribute
img.methods
img
pic
continue
str
continue
x.slice(0..300)
x[0,500]
x
x.class
x
x.slice[0,500]
x = object.text
s_length
continue
object.text
object.count
object.length
object
continue
object.css('p').length
object.length
object.count
object
continue
x
continue
x.each do 
z << x.last.to_html
z << x.first.to_html
z = ""
x
continue
s
continue
x.first.to_html
x
x.to_html
continue
x
continue
img.css('p').count
img.css('span').count
img
img.css('span').first(2).text
